from modules.ipc import SharedMemory

# image constants
RESOLUTION = (480, 640)
IMG_SIZE = RESOLUTION[0]*RESOLUTION[1]

# ipc constants
KEY1 = "MEM1"
KEY2 = "MEM2"
KEY3 = "MEM3"
KEY4 = "MEM4"
PROCESSED_BUFFER = SharedMemory(KEY1, IMG_SIZE)
BUFFER_TO_PROCESS = SharedMemory(KEY2, IMG_SIZE)
NEW_FRAME = SharedMemory(KEY4, 1) 

TRANSFORMATION = SharedMemory(KEY3, 2) 
TRANSFORMATION_OPTIONS = {
    "identity": b'00',
    "edges": b'01',
    "gaussian_blur": b'10',
    "sharpen": b'11',
}

# socket
HOST = '127.0.0.1' # '172.16.0.231' # '192.168.100.64' #'0.0.0.0' # '192.168.100.35' ip of video processing server
PORT = 3001
ETH_RESOLUTION = (50, 50)
CUT_SIZE = 250

USE_TCP = False

FRAME_SIZE = ETH_RESOLUTION[0]*ETH_RESOLUTION[1] + len(TRANSFORMATION_OPTIONS["identity"])

ETH_RESOLUTION_PADDED = (ETH_RESOLUTION[0] + 2, ETH_RESOLUTION[1] + 2) 
UDP_DATAGRAM_PROCESSED_SIZE = ETH_RESOLUTION[0]*ETH_RESOLUTION[1] + len(TRANSFORMATION_OPTIONS["identity"])
UDP_DATAGRAM_TO_PROCESS_SIZE = ETH_RESOLUTION_PADDED[0]*ETH_RESOLUTION_PADDED[1] +  len(TRANSFORMATION_OPTIONS["identity"])